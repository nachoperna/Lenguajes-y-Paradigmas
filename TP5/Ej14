- Ejercicio 14

	- a) Ordenar en forma decreciente las semánticas de acuerdo al tamaño que ocupa el RA de la función llamada.
		1.PCV (el tamaño es acorde al tamaño de la variable que copien)
		1.PCR
		1.PCVR (al usar copia se crean los parametros formales en el RA)
		2.PR con alias (se crea el parametro formal en el parametro)
		3.PR con puntero (no se crea el parametro formal, solo se guarda el puntero)
		4.PN con reemplazo textual (no hay parametros formales creados)

	- b) ¿En cuáles casos se necesita de la cadena estática para ubicar el parámetro real?
		En todos en los que se necesite modificar el parametro real desde el formal: PCR, PCVR, PR con alias y PR con puntero.

	- c) ¿En cuáles casos se dan resultados inesperados si se quiere pasar un elemento de un arreglo?
		En pasaje PCR y PCVR puede producirse resultados inesperados porque los arreglos se pasan por referencia por convencion sin tener que indicar nada extra en el pasaje, por lo tanto si queremos utilizar un pasaje por copia se puede obtener un resultado final que no sea el esperado.

	- d) ¿En cuál semántica el parámetro real se actualiza instantáneamente luego de su uso en una instrucción?
		En PR y PN el parametro real se actualiza instantaneamente porque en el pasaje por referencia se busca el lugar de memoria del parametro real y se lo modifica y en pasaje por nombre se modifican esas variables que tiene al alcance la funcion en la cadena estatica.

	- e) ¿En cuáles casos se produce un error en tiempo de ejecución si se pasa una constante?
		En tiempo de ejecucion se puede producir error en cualquier tipo de TPP si la constante esta del lado izquierdo de una asignacion o su valor es modificado, y hay error en tiempo de compilacion si usamos un TPP PCR, PCVR y PR porque una constante no tiene un espacio de memoria asignado para ser referenciado o escrito al finalizar la ejecucion.

	- f) Para cada caso ¿qué ocurre si se pasa una variable estática global como parámetro?
		No ocurre nada pero es innecesario porque todas las funciones de un programa tienen acceso directo a una variable estatica global y no es necesario "intentar" ampliarle el alcance pasandola como parametro.

	- g) En el inciso a) qué ocurre si se pasa un parámetro cuyo tipo es más pequeño que un puntero.
		Seria un caso muy raro porque el puntero es un entero que ocupa minimas unidades de memoria (aprox 4 bytes) pero en ese caso el tamaño del registro de activacion para ese parametro estaria delimitado en su totalidad por el tamaño del puntero.

	- h) ¿En cuáles semánticas puede haber errores de compilación debido a problemas de alcance? Ejemplificar
	Proporcionar un ejemplo de un caso donde se produzca un error en tiempo de ejecución durante el llamado.

		En PN puede haber errores de compilacion debido a problemas de alcance porque no se tiene un puntero al parametro real original sino que se intenta modificar localmente una variable como si fuera propia.

		{
			def f1():
				x = 1
				f2(x)
			def f2(a):
				non local x
				a = 2
		}
		donde luego en la re-compilacion el siguiente codigo tendria un error de compilacion por problema de alcance de f2 hacia la variable x que es local a f1.
		{
			def f1():
				x = 1
				f2(x)
			def f():
				non local x
				x = 2
		}
		se debe especificar non local para que f2 cree una variable local x